{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/Navbar.js","components/layout/VerticalTabs.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SignedInLinks","react_default","a","createElement","className","NavLink","to","class","Navbar","Link","src","alt","layout_SignedInLinks","VerticalTabs","es","defaultTab","vertical","tabFor","style","borderRadius","width","height","ProjectSummary","border","ProjectList","project_ProjectSummary","Dashboard","project_ProjectList","Component","library","add","fab","Footer","react_fontawesome_index_es","icon","size","fixedWidth","App","HashRouter","layout_Navbar","layout_VerticalTabs","dashboard_Dashboard","layout_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.180b0419.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst SignedInLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/' className=\"black-text text-lighten-1\"><i class=\"material-icons notif\">notifications_none</i><small class=\"notification-badge\">6</small></NavLink></li>\n            <li><NavLink to='/' className='btn btn-floating green lighten-2'>AB</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedInLinks;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from'./SignedInLinks'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"nav-wrapper white darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo black-text left\"><img src=\"images\\logo.PNG\" className=\"center\" alt=\"img\" /></Link>\n                <SignedInLinks/>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react'\r\nimport 'react-web-tabs/dist/react-web-tabs.css'\r\nimport { Tabs, Tab, TabList } from 'react-web-tabs';\r\n\r\nconst VerticalTabs = () => {\r\n    return (\r\n      <Tabs defaultTab=\"vertical-tab-one\" vertical>\r\n        <TabList>\r\n          <Tab tabFor=\"vertical-tab-one\" className=\"tab1\"><i class=\"small material-icons cyan-text\">dashboard</i></Tab>\r\n          <Tab tabFor=\"vertical-tab-two\"><i class=\"small material-icons\">search</i></Tab>\r\n          <Tab tabFor=\"vertical-tab-three\"><i class=\"small material-icons\">store</i></Tab>\r\n        </TabList>\r\n      </Tabs>\r\n    )\r\n}\r\n\r\nexport default VerticalTabs;","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst style = {\n  borderRadius:100,\n  width:75,\n  height:75\n}\nconst ProjectSummary = () => {\n    return (\n      <div className=\"project-list section\">\n        <div class=\"card horizontal z-depth-0\">\n          <div class=\"card-image\">\n            <img src=\"images\\panda.jpg\" alt=\"img\" class=\"circle\" style={style}/>\n          </div>\n          <div class=\"card-stacked\">\n            <div class=\"card-title\">\n              Blog/Article\n            </div>\n            <div class=\"card-content\">\n              <p>I am a very simple card. I am good at containing small bits of information.</p>\n            </div>\n            <div class=\"card-action\">\n              <NavLink to='/' className='btn transparent blue-text z-depth-0 lighten-2' style={{border:\"2px solid #5DBCD2\",}}>Order</NavLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\n\nconst ProjectList = () => {\n    return (\n      <div className=\"project-list section\">\n        <div class=\"col m4\">\n          <ProjectSummary/>\n          <br />\n          <ProjectSummary/>\n          <br />\n          <ProjectSummary/>\n        </div>\n        <div class=\"col m4\">\n          <ProjectSummary/>\n          <br />\n          <ProjectSummary/>\n          <br />\n          <ProjectSummary/>\n        </div>\n        <div class=\"col m4\">\n          <ProjectSummary/>\n          <br />\n          <ProjectSummary/>\n          <br />\n          <ProjectSummary/>\n        </div>         \n      </div>\n    )\n  }\n\nexport default ProjectList\n","import React, { Component } from 'react';\nimport ProjectList from '../project/ProjectList'\n\nclass Dashboard extends Component{\n    render(){\n        return(\n            <div className=\"dashboard container\">\n                <h3>Content Store</h3>\n                <br />\n                <br />\n                <h5 class=\"bold cyan-text lighten-1\">Got bulk orders of almost similar orders ? Fill the order brief in an excel sheet</h5>\n                <p>If you're wondering about an easy way to place orders in large numbers, we provide a way customized just for that.\n                Download our excel sheet, and feel the order brief in the prescibed format and submit. In case you need any help, we are just a click away to assist you in placing your order</p>\n                <br />\n                <br />\n                <div className=\"row\">\n                    <div className=\"col s12 m12\">\n                        <ProjectList/>\n                    </div>\n                </div>\n            </div>  \n        )  \n    }\n}\n\nexport default Dashboard","import React from 'react'\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nlibrary.add( fab)\r\nconst Footer = () => {\r\n    return (\r\n        <footer class=\"page-footer transparent\">\r\n            <div class=\"container center grey-text\">                \r\n                <FontAwesomeIcon icon={['fab','twitter']} size=\"3x\" fixedWidth />\r\n                <FontAwesomeIcon icon={['fab','linkedin-in']} size=\"3x\" fixedWidth />                \r\n                <FontAwesomeIcon icon={['fab','instagram']} size=\"3x\" fixedWidth />\r\n                <FontAwesomeIcon icon={['fab','facebook-f']} size=\"3x\" fixedWidth />\r\n                <br />\r\n                <br />\r\n                <div class=\"grey-text\">Copyright Â© 2019 White Panda Media Pvt. Ltd.</div>\r\n                <div class=\"grey-text\">All rights reserved</div>\r\n                <br />\r\n                <div>Privacy policy | Terms of service | Service Agreement | Contact us</div>\r\n                <br />\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport {HashRouter, BrowserRouter} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport VerticalTabs from './components/layout/VerticalTabs'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Footer from './components/layout/Footer'\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"row\">\n            <div className=\"col s12 m1\">\n                <VerticalTabs/>\n            </div>\n            <div className=\"col s12 m11\">\n                <Dashboard/>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}